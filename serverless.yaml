service: nestjs-typescript-challenge

frameworkVersion: "3"

useDotenv: true

package:
  individually: true
  exclude:
    - '**/test/**'
    - '**/*.spec.ts'
    - '**/*.e2e.ts'
    - '**/e2e/**'
    - 'node_modules/**/test/**'
    - 'node_modules/**/*.e2e.ts'

plugins:
  - serverless-offline
  - serverless-plugin-aws-alerts

provider:
  name: aws
  runtime: nodejs18.x
  memorySize: 1024
  timeout: 25
  stage: main
  region: us-east-2
  environment: 
    PORT: ${env:PORT}
    JWT_SECRET: ${env:JWT_SECRET}
    DB_HOST: ${env:DB_HOST}
    DB_PORT: ${env:DB_PORT}
    DB_USER: ${env:DB_USER}
    DB_PASS: ${env:DB_PASS}
    DB_DATABASE: ${env:DB_DATABASE}

functions:
  main:
    handler: dist/serverless.handler
    events:
      - http:
          method: ANY
          path: /{proxy+}

custom:
  alerts:
    stages:
      - main
    topics:
      alarm:
        topic: ${self:service}-${opt:stage}-alerts
    alarms:
      - name: "FunctionErrors"
        description: "Alert if any of the functions are throwing errors"
        metric: Errors
        threshold: 1
        statistic: Sum
        period: 300
        evaluationPeriods: 1
        comparisonOperator: GreaterThanOrEqualToThreshold
        treatMissingData: notBreaching
      - name: "FunctionDuration"
        description: "Alert if function duration exceeds threshold"
        metric: Duration
        threshold: 1000
        statistic: Average
        period: 300
        evaluationPeriods: 1
        comparisonOperator: GreaterThanOrEqualToThreshold
        treatMissingData: notBreaching
